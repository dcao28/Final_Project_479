source("clean.R")
clDD<-rbind(cl$DD,cl.test$DD)
dif<-diff(clDD,1);dif[1]<-0
classDD<-as.factor(ifelse(dif >0,1,-1))#1:up;-1:down
classDD
cl$DD
cl$DD <- classDD[1:length(cl$DD)]
inherits(cl$DD,"factor")
extends(class(cl$DD),"factor")
lagDD<-lagx("DD",lag_num,insample = TRUE)
lag_num=5
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD
source("clean.R")
clDD<-rbind(cl$DD,cl.test$DD)
classDD<-as.factor(ifelse(dif >0,1,-1))#1:up;-1:down
lag_num=5
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD
dif<-diff(lagDD$DD,1);dif[1]<-0
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
dif
dif<-diff(lagDD$DD,1)
dif
lagDD$DD
dif<-diff(lagDD$DD,1);dif <-c(0,dif)
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
lagDD
dif<-diff(cl$DD,1)
dif
lag_num=5
lagDD<-lagx("DD",lag_num,insample = TRUE)
dif<-diff(cl$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
lagDD
lag_num=1
lagDD<-lagx("DD",lag_num,insample = TRUE)
dif<-diff(cl$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
#lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
lagDD
lag_num=0
lagDD<-lagx("DD",lag_num,insample = TRUE)
dif<-diff(cl$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
#lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
seq(0)
lagDD
lagDD<-lagx("DD",lag_num,insample = TRUE)
dif<-diff(cl$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
#lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
m<-svm(DD~.,data =lagDD ,type="eps-regression"
,kernel=kernel,scale=FALSE)
library(e1071)
lagDD<-lagx("DD",lag_num,insample = TRUE)
dif<-diff(cl$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
#lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
m<-svm(DD~.,data =lagDD
,kernel=kernel,scale=FALSE)
lagDD
class(lagDD$DD)
kernel <- "radial"
m<-svm(DD~.,data =lagDD
,kernel=kernel,scale=FALSE)
m
source('~/Box Sync/Course/479/Final_Project_479/svmRegression_auto.R')
autoSVMR(lag_num,"radial",insampletest = FALSE)
cl.test$DD
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample=FALSE)
dif<-diff(cl.test$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= as.factor(ifelse(dif >0,1,-1)))
dif
lagDD
DIM(lagDD)
dim(lagDD)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample=FALSE)
dif<-diff(cl.test$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= tail(classDD,dim(lagDD)[1]))
lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
new <- predict(m,lagDD[,-1])
lagDD
lagDD<-lagx("DD",lag_num,insample=FALSE)
dif<-diff(cl.test$DD,1);dif[1]<-0;dif <- dif[-seq(lag_num)]
lagDD <- mutate(lagDD,DD= tail(classDD,dim(lagDD)[1]))
lagDD
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample=FALSE)
lagDD <- mutate(lagDD,DD= tail(classDD,dim(lagDD)[1]))
new <- predict(m,lagDD[,-1])
lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
new <-.xts(new,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format="%Y-%m-%d"))
lagDD
lagDD<-lagx("DD",lag_num,insample=FALSE)
lagDD <- mutate(lagDD,DD= tail(classDD,dim(lagDD)[1]))
new <- predict(m,lagDD[,-1])
lagDD
lim<-c(min(c(as.vector(new),as.vector(lagDD[,1]))),max(c(as.vector(new),as.vector(lagDD[,1]))))
plot(lagDD[,1],main="DD and out_sample estimate",type ="l",ylim=lim)
new
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
autoSVMR(lag_num,"radial",insampletest = FALSE)
autoSVMR(lag_num,"polynomial",insampletest = FALSE)
autoSVMR(lag_num,"radial",insampletest = TRUE)
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= head(classDD,dim(lagDD)[1]))
m<-svm(DD~.,data =lagDD
,kernel=kernel,scale=FALSE)
new <- predict(m, lagDD[,-1])
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
autoSVMR(lag_num,"radial",insampletest = TRUE)
cl.test$DD
length(cl.test$DD)
classDD
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
autoSVMR(lag_num,"radial",insampletest = TRUE)
autoSVMR(lag_num,"polynomial",insampletest = FALSE)
autoSVMR(lag_num,"radial",insampletest = FALSE)
(classDD<-as.factor(ifelse(dif >0,1,-1)))#1:up;-1:down
names(classDD)<-c(rep("train",12),rep("test",13))
classDD
autoSVMR(lag_num,"polynomial",insampletest = TRUE)
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= head(classDD,dim(lagDD)[1]))
m<-svm(DD~.,data =lagDD
,kernel=kernel,scale=TRUE)
lagDD
cl$DD
length(cl$DD)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
autoSVMR(lag_num,"radial",insampletest = FALSE)
autoSVMR(lag_num,"polynomial",insampletest = FALSE)
classDD
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD
autoSVMR(lag_num,"radial",insampletest = TRUE)
autoSVMR(lag_num,"polynomial",insampletest = TRUE)
lag_num=6
autoSVMR(lag_num,"radial",insampletest = TRUE)
autoSVMR(lag_num,"polynomial",insampletest = TRUE)
autoSVMR(lag_num,"radial",insampletest = FALSE)
autoSVMR(lag_num,"polynomial",insampletest = FALSE)
new
new == classDD[(lag_num+1):12]
ifelse(new == classDD[(lag_num+1):12],0,1)
length(new)
length(classDD[(lag_num+1):12])
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
m<-svm(DD~.,data =lagDD
,kernel=kernel,scale=TRUE)
new <- predict(m, lagDD[,-1])
new
lagDD
print(paste(kernel,"static svm insample","the P.E. raio is"
,sum(new == classDD[(lag_num+1):12])/length(new),sep=" "))
new <- predict(m, lagDD[,-1])
print(paste(kernel,"static svm insample","the P.E. raio is"
,sum(new != classDD[(lag_num+1):12])/length(new),sep=" "))
lagDD<-lagx("DD",lag_num,insample=FALSE)
lagDD <- mutate(lagDD,DD= tail(classDD,dim(lagDD)[1]))
new <- predict(m,lagDD[,-1])
print(paste(kernel,"static svm outsample","the P.E. raio is"
,sum(new == classDD[(lag_num+1):12])/length(new),sep=" "))
new
dim(lagDD)[1]
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD.test<-lagx("DD",lag_num,insample=FALSE)
lagDD.test <- mutate(lagDD.test,DD= tail(classDD,dim(lagDD.test)[1]))
lagDD.all <- rbind(lagDD,lagDD.test)
new<-c()
lagDD.all
lagDD
i=1
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
i=1
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
roll_num = 7
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
trainnow
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
m
p<-predict(m,lagDD.test[i,-1])
new<-c(new,p)
new
p
length(p)
new
length(new)
new[1]
names(new)
autoSVMR(lag_num,"radial",insampletest = FALSE)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 6,"polynomial",insampletest = FALSE,roll_num = 7)
autoSVMR(lag_num,"radial",insampletest = FALSE)
autoSVMR(lag_num,"polynomial",insampletest = FALSE)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
for (i in 1:length(index(lagDD.test))) {
i=1
for (i in 1:length(index(lagDD.test))) {
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
}
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD.test<-lagx("DD",lag_num,insample=FALSE)
lagDD.test <- mutate(lagDD.test,DD= tail(classDD,dim(lagDD.test)[1]))
lagDD.all <- rbind(lagDD,lagDD.test)
new<-c()
i
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
new
i=1
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD.test<-lagx("DD",lag_num,insample=FALSE)
lagDD.test <- mutate(lagDD.test,DD= tail(classDD,dim(lagDD.test)[1]))
lagDD.all <- rbind(lagDD,lagDD.test)
new<-c()
for (i in 1:length(index(lagDD.test))) {
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
}
i=1
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
i=4
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
length(index(lagDD.test))
i=13
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
new
new<-c()
for (i in 1:length(index(lagDD.test))) {
i=13
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
}
new
for (i in 1:length(index(lagDD.test))) {
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
}
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
m
lag_num=6
kernel = "radial"
roll_num = 7
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD.test<-lagx("DD",lag_num,insample=FALSE)
lagDD.test <- mutate(lagDD.test,DD= tail(classDD,dim(lagDD.test)[1]))
lagDD.all <- rbind(lagDD,lagDD.test)
new<-c()
for (i in 1:length(index(lagDD.test))) {
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
}
i
i=13
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
new
length(new)
for (i in 1:length(index(lagDD.test))) {
#trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
print(i)
new <-c(new,p)
}
i=13
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
trainnow
lagDD.all
length(index(lagDD))
lagDD
?INDEX
13+6
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
trainnow
cl.test$DD
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 12)
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 11)
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 8)
q
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 7)
q
roll_num = 8
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
i=13
new<-c()
trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]
m<-svm(DD~.,data =trainnow ,kernel=kernel,scale=TRUE)
p<-predict(m,lagDD.test[i,-1])
p<-as.character(p)
new <-c(new,p)
new
trainnow
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 8)
q
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 4,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 3,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 7,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 4,"radial",insampletest = FALSE,roll_num = 9)
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 9)
rollSVMR(lag_num = 10,"radial",insampletest = FALSE,roll_num = 2)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 10,"radial",insampletest = FALSE,roll_num = 2)
q
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 8)
q
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 3)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 5)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 6)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 9)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 8)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 6,"radial",insampletest = FALSE,roll_num = 6)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 8)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
rollSVMR(lag_num = 4,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 3,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 6,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 4,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 8)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 9)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 10)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 7)
rollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 8)
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lagx()
lagx
source('~/Box Sync/Course/479/Final_Project_479/svmRegression_mixed.R')
source('~/Box Sync/Course/479/Final_Project_479/svmRegression_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/svmRegression_mixed.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_mixed.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_mixed.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_mixed.R')
lag_num
kernel
corlags = 3
lagX<-lapply(HighCor, function(x,lag_num,insample) {lagx2(x,lag_num,insample)}
, lag_num=corlags,insample = TRUE)
lagX <- as.data.frame(lagX)
lagX
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD <- cbind(lagDD,head(lagX,dim(lagDD)[1]))##combine highly correlated stocks
m<-svm(DD~.,data =lagDD ,kernel=kernel,scale=FALSE)
m
new <- predict(m, lagDD[,-1])
NEW
new
classDD[(lag_num+1):12])
classDD[(lag_num+1):12]
print(paste(k ernel,"static svm insample","the P.E. raio is"
,sum(new != classDD[(lag_num+1):12])/length(new),sep=" "))
print(paste(k ernel,"static svm insample","the P.E. raio is"
,sum(new != classDD[(lag_num+1):12])/length(new),sep=" "))
print(paste(kernel,"static svm insample","the P.E. raio is"
,sum(new != classDD[(lag_num+1):12])/length(new),sep=" "))
lagX<-lapply(HighCor, function(x,lag_num,insample) {lagx2(x,lag_num,insample)}
, lag_num=corlags,insample = FALSE)
lagX <- as.data.frame(lagX)
lagDD<-lagx("DD",lag_num,insample=FALSE)
lagDD <- mutate(lagDD,DD= tail(classDD,dim(lagDD)[1]))
lagDD <- cbind(lagDD,head(lagX,dim(lagDD)[1]))##combine highly correlated stocks
new <- predict(m,lagDD[,-1])
new
print(paste(kernel,"static svm outsample","the P.E. raio is"
,sum(new != tail(classDD,dim(lagDD)[1]))/length(new),sep=" "))
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
lag_num=5
mixSVMR(lag_num,"radial",insampletest = FALSE,corlags=4)
mixSVMR(lag_num,"polynomial",insampletest = FALSE,corlags=4)
mixSVMR(lag_num,kernel = "radial",insampletest = FALSE,corlags=4)
mixSVMR(lag_num,kernel = "polynomial",insampletest = FALSE,corlags=4)
lagX<-lapply(HighCor, function(x,lag_num,insample) {lagx2(x,lag_num,insample)}
, lag_num=corlags,insample = TRUE)
lagX <- as.data.frame(lagX)
lagX.test<-lapply(HighCor, function(x,lag_num,insample) {lagx2(x,lag_num,insample)}
, lag_num=corlags,insample = FALSE)
lagX.test <- as.data.frame(lagX.test)
lagX.all <- rbind(lagX,lagX.test)
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD.test<-lagx("DD",lag_num,insample=FALSE)
lagDD.all <- rbind(lagDD,lagDD.test)
lagDD.all <- cbind(lagDD.all,head(lagX.all,dim(lagDD.all)[1]))##combine highly correlated stocks
lagDD.all <- rbind(lagDD,lagDD.test)
lagDD
lagDD.test
lagX<-lapply(HighCor, function(x,lag_num,insample) {lagx2(x,lag_num,insample)}
, lag_num=corlags,insample = TRUE)
lagX
lagX <- as.data.frame(lagX)
lagX.test<-lapply(HighCor, function(x,lag_num,insample) {lagx2(x,lag_num,insample)}
, lag_num=corlags,insample = FALSE)
lagX.test
lagX.test <- as.data.frame(lagX.test)
lagX.test
lagX
lagX.all <- rbind(lagX,lagX.test)
lagX.all
lagDD<-lagx("DD",lag_num,insample = TRUE)
source('~/Box Sync/Course/479/Final_Project_479/classification_mixed.R')
lagDD<-lagx("DD",lag_num,insample = TRUE)
lagDD <- mutate(lagDD,DD= classDD[(lag_num+1):12])
lagDD.test<-lagx("DD",lag_num,insample=FALSE)
lagDD.test <- mutate(lagDD.test,DD= tail(classDD,dim(lagDD.test)[1]))
lagDD.all <- rbind(lagDD,lagDD.test)
lagDD.all <- cbind(lagDD.all,head(lagX.all,dim(lagDD.all)[1]))##combine highly correlated stocks
lagDD.all
mixRollSVMR(lag_num = 5,"radial",insampletest = FALSE,roll_num = 8,corlags=3)
mixRollSVMR(lag_num = 5,"polynomial",insampletest = FALSE,roll_num = 8,corlags=3)
source('~/Box Sync/Course/479/Final_Project_479/classification_mixed.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_auto.R')
source('~/Box Sync/Course/479/Final_Project_479/classification_mixed.R')
source("svmRegression_auto.R")
suppressMessages(library(dplyr))
source("svmRegression_auto.R")
