{
    "collab_server" : "",
    "contents" : "source(\"./clean.R\")  \nlibrary(e1071)\n\n### static svm outsample estimate\nautoSVMR<-function(lag_num,kernel,insampletest=TRUE){\n  lagDD<-lagx(\"DD\",lag_num,insample = TRUE)\n  lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format=\"%Y-%m-%d\"))  \n  m<-svm(DD~.,data =lagDD ,type=\"eps-regression\"\n         ,kernel=kernel,scale=FALSE)  \n  \n  if(insampletest){\n    new <- predict(m, lagDD[,-1])\n    new <-.xts(new,index = as.Date(rownames(lagDD),format=\"%Y-%m-%d\"))\n    \n    plot(lagDD[,1],ylim=c(45,60),main=\"DD and in_sample estimate\")\n    lines(new,type = \"b\") \n    print(paste(kernel,\"static svm insample\",\"the S.E is\",sum((new-lagDD[,1])^2),sep = \" \"))\n  }else{\n    \n    lagDD<-lagx(\"DD\",lag_num,insample=FALSE)\n    lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format=\"%Y-%m-%d\"))  \n    \n    new <- predict(m,lagDD[,-1])\n    new <-.xts(new,index = as.Date(rownames(lagDD),format=\"%Y-%m-%d\"))\n    \n    lim<-c(min(c(as.vector(new),as.vector(lagDD[,1]))),max(c(as.vector(new),as.vector(lagDD[,1]))))\n    plot(lagDD[,1],main=\"DD and out_sample estimate\",type =\"l\",ylim=lim)\n    lines(new,type = \"b\") \n    print(paste(kernel,\"static svm outsample\",\"the S.E is\",sum((new-lagDD[,1])^2),sep=\" \"))\n  }\n  return(new)\n}\n\nlag_num=5\nautoSVMR(lag_num,\"radial\",insampletest = FALSE)\nautoSVMR(lag_num,\"polynomial\",insampletest = FALSE)\n\n### rolling svm outsample estimate(windows<=7)\nrollSVMR<-function(lag_num,kernel,roll_num,insampletest=TRUE){\n  if(insampletest) autoSVMR(lag_num,kernel,insampletest=TRUE)\n  else {\n    lagDD<-lagx(\"DD\",lag_num,insample = TRUE)\n    lagDD.test<-lagx(\"DD\",lag_num,insample=FALSE)\n    lagDD.all <- rbind(lagDD,lagDD.test)\n    lagDD.all<-.xts(x = lagDD.all,index = as.Date(rownames(lagDD.all),format=\"%Y-%m-%d\")) \n    \n    lagDD<-.xts(x = lagDD,index = as.Date(rownames(lagDD),format=\"%Y-%m-%d\")) \n    lagDD.test<-.xts(x = lagDD.test,index = as.Date(rownames(lagDD.test),format=\"%Y-%m-%d\")) \n    new<-c()\n    \n    for (i in 1:length(index(lagDD.test))) {\n      #trainnow <-  lagDD.all[1:(i+length(index(lagDD))-1),]\n      trainnow <-  lagDD.all[(i+length(index(lagDD))-roll_num):(i+length(index(lagDD))-1),]\n      m<-svm(DD~.,data =trainnow ,type=\"eps-regression\"\n             ,kernel=kernel,scale=FALSE)  \n      p<-predict(m,lagDD.test[i,-1])\n      new<-c(new,p)\n    }\n    #return(new)\n    new <-.xts(new,index = as.Date(rownames(lagDD.test),format=\"%Y-%m-%d\"))\n    \n    lim<-c(min(c(as.vector(new),as.vector(lagDD.test[,1]))),max(c(as.vector(new),as.vector(lagDD.test[,1]))))\n    plot(lagDD.test[,1],main=\"DD and out_sample estimate\",type =\"l\",ylim=lim)\n    lines(new,type = \"b\") \n    print(paste(kernel,\"rolling svm outsample\",\"the S.E is\",sum((new-lagDD.test[,1])^2)),sep=\"\")\n  }\n  return(new)\n}\n\nrollSVMR(lag_num = 5,\"radial\",insampletest = FALSE,roll_num = 7)  \nrollSVMR(lag_num = 5,\"polynomial\",insampletest = FALSE,roll_num = 7)  \n\n\n",
    "created" : 1458542171416.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1077021138",
    "id" : "150C537C",
    "lastKnownWriteTime" : 1458540541,
    "last_content_update" : 1458540541,
    "path" : "~/Box Sync/Course/479/Final_Project/svmRegression_auto.R",
    "project_path" : "svmRegression_auto.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}